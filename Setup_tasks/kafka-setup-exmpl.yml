---
- name: Install OpenJDK, Download Kafka, and Start Services
  hosts: all
  become: yes
  tasks:

    - name: Install dependencies (OpenJDK 11, wget, tar)
      apt:
        name:
          - openjdk-11-jdk
          - wget
          - tar
        state: present
        update_cache: yes

    - name: Verify Java installation
      command: java -version
      register: java_output
      changed_when: false

    - name: Print Java version
      debug:
        msg: "{{ java_output.stderr_lines }}"

    - name: Create Kafka directory
      file:
        path: /home/ans/kafka
        state: directory
        mode: '0755'

    - name: Download Kafka archive
      get_url:
        url: "https://archive.apache.org/dist/kafka/2.8.2/kafka_2.13-2.8.2.tgz"
        dest: "/home/ans/kafka/kafka_2.13-2.8.2.tgz"
        mode: '0644'

    - name: Extract Kafka archive
      unarchive:
        src: "/home/ans/kafka/kafka_2.13-2.8.2.tgz"
        dest: "/home/ans/kafka"
        remote_src: yes

    - name: Set environment variables in .bashrc
      blockinfile:
        path: ~/.bashrc
        block: |
          export KAFKA_HOME=~/kafka/kafka_2.13-2.8.2
          export PATH=$PATH:$KAFKA_HOME/bin
          export JAVA_HOME=/usr/lib/jvm/java-11-openjdk-amd64
        create: yes
      notify: Reload shell

    - name: Start Zookeeper
      shell: "sudo nohup /home/ans/kafka/kafka_2.13-2.8.2/bin/zookeeper-server-start.sh /home/ans/kafka/kafka_2.13-2.8.2/config/zookeeper.properties &"
      async: 30
      poll: 0

    - name: Wait for Zookeeper to start
      pause:
        seconds: 5

    - name: Start Kafka
      shell: "sudo nohup kafka-server-start.sh /home/ans/kafka/kafka_2.13-2.8.2/config/server.properties &"
      async: 30
      poll: 0

    - name: Wait for kafka to start
      pause:
        seconds: 5

    - name: Test kafka
      shell: "sudo kafka-topics.sh --create --topic Test2 --bootstrap-server m1:9092 --partitions 1 --replication-factor 1"
      async: 5
      poll: 0

    - name: Chesk status of kafka
      shell: "sudo kafka-topics.sh --describe --bootstrap-server m1:9092"
      register: kafka_status

    - name: Display status
      debug:
        msg: "Status: {{ kafka_status.stdout}}"

  handlers:
    - name: Reload shell
      shell: source ~/.bashrc


