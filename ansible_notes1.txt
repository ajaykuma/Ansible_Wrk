Setup Ansible
--------------

--Setup multiple Linux machines (ubuntu/centos)
  For ubuntu:
  - apt update (to update each machine)
  - setup NAT/Host only adaptor for communication across machines using different IP addresses

Ansible is not installed by default on Ubuntu, but you can easily install it using APT (default package manager) or PPA (Personal Package Archive).

Install Ansible from Ubuntu Repositories (Recommended for Stability)
- Ubuntu 22.04 provides Ansible in its official repositories.

- update package lists:
  sudo apt update

- Install ansible
  sudo apt install -y ansible

- Verify installation
  ansible --version

root@m1:~# ansible --version
ansible 2.9.6
  config file = /etc/ansible/ansible.cfg
  configured module search path = ['/root/.ansible/plugins/modules', '/usr/share/ansible/plugins/modules']
  ansible python module location = /usr/lib/python3/dist-packages/ansible
  executable location = /usr/bin/ansible
  python version = 3.8.10 (default, Nov 14 2022, 12:59:47) [GCC 9.4.0]

Install the Latest Ansible Version from PPA (For Latest Features)
- Add the Ansible PPA

sudo apt update
sudo apt install -y software-properties-common
sudo add-apt-repository --yes --update ppa:ansible/ansible

- Install Ansible
sudo apt install -y ansible

ansible --version

Install Ansible Using pip (For a Specific Version)
- install Ansible via pip (Python package manager)

- Install python and pip
sudo apt install -y python3 python3-pip

- Install Ansible using pip
pip3 install --user ansible

- Add ansible to system PATH
echo 'export PATH=$HOME/.local/bin:$PATH' >> ~/.bashrc
source ~/.bashrc

ansible --version

#Post-Installation Configuration

- Check Ansible Modules & Plugins
ansible-doc -l | less

- Configure an Inventory File (/etc/ansible/hosts)
sudo nano /etc/ansible/hosts

- Add the following
[web_servers]
192.168.1.10
192.168.1.11

- Test Connection to a Remote Host
ansible all -m ping -i /etc/ansible/hosts

----------------------------------------------------------
Task 1: Login as 'ans' user and being in home directory

--setup ssh access to your host 
ssh-keygen -t rsa -P ""
cat $HOME/,ssh/id_rsa.pub >> $HOME/.ssh/authorized_keys

--Test ssh to your host such as 
ssh ans@m1

--setup 'hosts.ini' file containing
[my-host]
172.28.78.1 ansible_ssh_private_key_file=home/ans/.ssh/id_rsa

--setup 'vm-setup-exmpl.yml' file containing your instructions

--Run your playbook
ans@m1:~/Downloads/Ansible_Wrk$ ansible-playbook -i Inventory/hosts.ini Setup_tasks/vm-setup-exmpl.yml

--If it complains/fails needing root pswd "msg": "Missing sudo password" which means
--the Ansible playbook requires become: yes (sudo privileges), but Ansible is not getting the sudo password.

Option 1: Provide the Sudo Password Interactively
ans@m1:~/Downloads/Ansible_Wrk$ ansible-playbook -i Inventory/hosts.ini Setup_tasks/vm-setup-exmpl.yml --ask-become-pass

Option 2: Add the Sudo Password to the Ansible Vault (Secure)
You can store the sudo password in an Ansible Vault-encrypted file and use it in the playbook:
--Create a vault file:
ansible-vault create sudo_password.yml

--Add the following content
ansible_become_pass: "your_sudo_password"

--Use the vault file in your playbook
ansible-playbook -i inventory_file playbook.yml --extra-vars "@sudo_password.yml" --ask-vault-pass

Option 3:
Set Up a Passwordless Sudo User (Best for Automation)
--to make ssh access password less
sudo visudo
ans ALL=(ALL) NOPASSWD: ALL
<save>

Now, run the playbook without requiring a sudo password.







  
